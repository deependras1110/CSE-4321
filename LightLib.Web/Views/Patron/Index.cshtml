@model LightLib.Web.Models.Patron.PatronIndexModel
@{
    ViewBag.Title = "Patrons";
}

<h2 class="lms-section-heading">
    Library Patrons
</h2>

<div class="row">
    <section>
        <p>
            <strong>Patrons</strong> make up the body of library users across all branches.
        </p> 
        <p>
            Use this page to add or remove Patrons from the system, replace lost library cards, view or manage fees.
        </p>
    </section>
</div>

<div class="row">
    <div class="col-12">
        <button class="btn btn-primary btn-sm">
            Add New Patron
        </button>
    </div>
</div>

<hr />

<div class="row">
    <div class="container container-fluid">
        <table class="table table-responsive-sm table-hover">
            <thead class="thead-dark">
            <tr>
                <th scope="col" style="width: 30%">Details</th>
                <th scope="col" style="width: 20%">Last</th>
                <th scope="col" style="width: 20%">First</th>
                <th scope="col" style="width: 25%">Email</th>
                <th scope="col" style="width: 5%">Fees</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var patron in Model.PageOfPatrons.Results) {
                <a asp-controller="Patron" asp-action="Detail" asp-route-id="@patron.Id">
                    <tr>
                        <th scope="row">
                            <a asp-controller="Patron" asp-action="Detail" asp-route-id="@patron.Id">
                                View Details
                            </a>
                        </th>
                        <td>@patron.LastName</td>
                        <td>@patron.FirstName</td>
                        <td>@patron.Email</td>
                        <td>$@Math.Round(patron.OverdueFees, 2)</td>
                    </tr>
                </a>
            }
            </tbody>
        </table>
        
        <nav aria-label="Patron Table Navigation Bottom">
          @{
              var previousPage = (Model.PageOfPatrons.PageNumber - 1);
              var nextPage = (Model.PageOfPatrons.PageNumber + 1);
              var prevDisabled = !Model.PageOfPatrons.HasPreviousPage ? "disabled" : "";
              var nextDisabled = !Model.PageOfPatrons.HasNextPage ? "disabled" : "";
          }
          <ul class="pagination justify-content-end">
              <li class="page-item small">
                  @Html.ActionLink("Previous", "Index", "Patron", new { page = previousPage }, new { @class="page-link" })
              </li>
              <li class="page-item small">
                  @Html.ActionLink("Next", "Index", "Patron", new { page = nextPage }, new { @class="page-link" })
              </li>
          </ul>
        </nav>
    </div>
</div>


